1. TIME SERIES DECOMPOSITION :


import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.seasonal import seasonal_decompose

data = {
    'Month': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    'Unemployment_Rate': [10.7, 9.8, 10.2, 11.2, 15.75, 17.8, 19.4, 25.6, 18.6, 15.6, 26.7, 19.5]
}

df = pd.DataFrame(data)

df['Month'] = pd.to_datetime(df['Month'], format='%b')
df.set_index('Month', inplace=True)

result = seasonal_decompose(df['Unemployment_Rate'], model='additive', period=3)

plt.figure(figsize=(10, 8))

plt.subplot(411)
plt.plot(result.observed)
plt.title('Observed')

plt.subplot(412)
plt.plot(result.trend)
plt.title('Trend')

plt.subplot(413)
plt.plot(result.seasonal)
plt.title('Seasonal')

plt.subplot(414)
plt.plot(result.resid)
plt.title('Residual')

plt.tight_layout()
plt.show()


2.) MOSAIC PLOT:


import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.graphics.mosaicplot import mosaic

data = {
    'SCHOOL': ['A', 'A', 'A', 'B', 'B', 'B', 'C', 'C', 'C', 'D', 'D', 'D'],
    'GRADE LEVEL': ['Grade 1', 'Grade 2', 'Grade 3'] * 4,
    'NUMBER OF STUDENTS': [25, 30, 20, 22, 28, 18, 20, 25, 15, 28, 32, 24]
}


df = pd.DataFrame(data)


mosaic(df, ['SCHOOL', 'GRADE LEVEL'], title='Number of Students by School and Grade Level')


plt.annotate('Efficient', (0.15, 0.3), color='green')
plt.annotate('Inefficient', (0.65, 0.3), color='red')

plt.show()


3.) TIME SERIES PLOT :


import pandas as pd
import matplotlib.pyplot as plt

data = {
    'Date': ['01/01/2024', '02/01/2024', '03/01/2024', '04/01/2024', '05/01/2024', '06/01/2024'],
    'Station A Temperature': [25.0, 24.5, 26.2, 23.8, 25.5, 23.0],
    'Station A Precipitation': [0.1, 0.0, 0.3, 0.2, 0.1, 0.4],
    'Station B Temperature': [23.5, 22.8, 25.0, 22.5, 24.5, 21.8],
    'Station B Precipitation': [0.2, 0.3, 0.1, 0.0, 0.4, 0.2]
}

df = pd.DataFrame(data)

df['Date'] = pd.to_datetime(df['Date'], format='%d/%m/%Y')

plt.figure(figsize=(10, 6))

plt.plot(df['Date'], df['Station A Temperature'], label='Station A Temperature', color='red')
plt.plot(df['Date'], df['Station B Temperature'], label='Station B Temperature', color='blue')

plt.xlabel('Date')
plt.ylabel('Temperature (Â°C)')
plt.title('Temperature Variation over Time')
plt.legend()
plt.grid(True)

plt.twinx()
plt.plot(df['Date'], df['Station A Precipitation'], label='Station A Precipitation', linestyle='--', color='orange')
plt.plot(df['Date'], df['Station B Precipitation'], label='Station B Precipitation', linestyle='--', color='green')
plt.ylabel('Precipitation (mm)')
plt.legend(loc='upper right')

plt.show()

4.) 

import pandas as pd
import plotly.graph_objs as go

data = {
    'Year': [2019, 2020, 2022, 2023, 2024],
    'Browser': ['Chrome', 'Chrome', 'Chrome', 'Chrome', 'Chrome'],
    'Users (Millions)': [22.7, 25.8, 28.7, 30.5, 35.2]
}


df = pd.DataFrame(data)

traces = []
browsers = df['Browser'].unique()
for browser in browsers:
    trace = go.Scatter(
        x=df[df['Browser'] == browser]['Year'],
        y=df[df['Browser'] == browser]['Users (Millions)'],
        mode='lines+markers',
        name=browser
    )
    traces.append(trace)

layout = go.Layout(
    title='Internet Users Over 5 Years by Browser',
    xaxis=dict(title='Year'),
    yaxis=dict(title='Number of Users (Millions)')
)

fig = go.Figure(data=traces, layout=layout)

fig.show()


5.) 


import pandas as pd
import matplotlib.pyplot as plt

data = {
    'Year': [2019, 2020, 2022, 2023, 2024],
    'Job Sector': ['IT', 'Government Job', 'Customer care', 'Bank', 'Games'],
    'Job Seekers Rate': [95, 97, 98, 82, 74],
    'Selection Rate': [25, 12, 45, 20, 35]
}

df = pd.DataFrame(data)

df_pivot = df.pivot(index='Year', columns='Job Sector', values=['Job Seekers Rate', 'Selection Rate'])

plt.figure(figsize=(10, 6))

plt.subplot(2, 1, 1)
df_pivot['Job Seekers Rate'].plot(kind='bar', stacked=True)
plt.title('Job Seekers Rate by Job Sector over 5 Years')
plt.xlabel('Year')
plt.ylabel('Job Seekers Rate (%)')

plt.subplot(2, 1, 2)
df_pivot['Selection Rate'].plot(kind='bar', stacked=True)
plt.title('Selection Rate by Job Sector over 5 Years')
plt.xlabel('Year')
plt.ylabel('Selection Rate (%)')

plt.tight_layout()
plt.show()
